import type { CypherEnvironment } from "../Environment";
import { Pattern } from "../pattern/Pattern";
import type { NodeRef } from "../references/NodeRef";
import { Clause } from "./Clause";
import { WithPathAssign } from "./mixins/WithPathAssign";
import { WithMerge } from "./mixins/clauses/WithMerge";
import { WithReturn } from "./mixins/clauses/WithReturn";
import { WithWith } from "./mixins/clauses/WithWith";
import { WithDelete } from "./mixins/sub-clauses/WithDelete";
import { WithRemove } from "./mixins/sub-clauses/WithRemove";
import { WithSet } from "./mixins/sub-clauses/WithSet";
export interface Create extends WithReturn, WithSet, WithPathAssign, WithWith, WithDelete, WithRemove, WithMerge {
}
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/create/)
 * @category Clauses
 */
export declare class Create extends Clause {
    private pattern;
    constructor(pattern: Pattern);
    /** @deprecated Use {@link Pattern} instead */
    constructor(pattern: NodeRef | Pattern);
    /** Add a {@link Create} clause
     * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/create/)
     */
    create(clause: Create): Create;
    create(pattern: Pattern): Create;
    /** @deprecated Use {@link Pattern} instead */
    create(pattern: NodeRef | Pattern): Create;
    /** @internal */
    getCypher(env: CypherEnvironment): string;
}
