import type { CypherEnvironment } from "../../Environment";
import { CypherASTNode } from "../../CypherASTNode";
import type { Expr } from "../../types";
export type Order = "ASC" | "DESC";
type OrderProjectionElement = [Expr, Order];
export declare class OrderBy extends CypherASTNode {
    private exprs;
    private skipClause;
    private limitClause;
    addOrderElements(exprs: OrderProjectionElement[]): void;
    skip(offset: number | Expr): void;
    limit(limit: number | Expr): void;
    private hasOrder;
    /** @internal */
    getCypher(env: CypherEnvironment): string;
}
export {};
