"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.tan = exports.sin = exports.radians = exports.pi = exports.haversin = exports.degrees = exports.cot = exports.cos = exports.atan2 = exports.atan = exports.asin = exports.acos = exports.sqrt = exports.log10 = exports.log = exports.exp = exports.e = exports.sign = exports.round = exports.rand = exports.cypherIsNaN = exports.floor = exports.ceil = exports.abs = void 0;
const Cypher_1 = require("../../Cypher");
const filter_truthy_1 = require("../../utils/filter-truthy");
const CypherFunctions_1 = require("./CypherFunctions");
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-abs)
 * @group Cypher Functions
 * @category Math
 */
function abs(expr) {
    return new CypherFunctions_1.CypherFunction("abs", [expr]);
}
exports.abs = abs;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-ceil)
 * @group Cypher Functions
 * @category Math
 */
function ceil(expr) {
    return new CypherFunctions_1.CypherFunction("ceil", [expr]);
}
exports.ceil = ceil;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-floor)
 * @group Cypher Functions
 * @category Math
 */
function floor(expr) {
    return new CypherFunctions_1.CypherFunction("floor", [expr]);
}
exports.floor = floor;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-isnan)
 * @group Cypher Functions
 * @category Math
 */
function cypherIsNaN(expr) {
    return new CypherFunctions_1.CypherFunction("isNaN", [expr]);
}
exports.cypherIsNaN = cypherIsNaN;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-rand)
 * @group Cypher Functions
 * @category Math
 */
function rand() {
    return new CypherFunctions_1.CypherFunction("rand");
}
exports.rand = rand;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-round)
 * @group Cypher Functions
 * @category Math
 */
function round(expr, precision, mode) {
    let precisionExpr;
    const modeExpr = mode ? new Cypher_1.Literal(mode) : undefined;
    if (typeof precision === "number") {
        precisionExpr = new Cypher_1.Literal(precision);
    }
    else {
        precisionExpr = precision;
    }
    return new CypherFunctions_1.CypherFunction("round", (0, filter_truthy_1.filterTruthy)([expr, precisionExpr, modeExpr]));
}
exports.round = round;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-sign)
 * @group Cypher Functions
 * @category Math
 */
function sign(expr) {
    return new CypherFunctions_1.CypherFunction("sign", [expr]);
}
exports.sign = sign;
/** Cypher function `e()` that returns the returns the base of the natural logarithm.
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-e)
 * @group Cypher Functions
 * @category Math
 */
function e() {
    return new CypherFunctions_1.CypherFunction("e");
}
exports.e = e;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-exp)
 * @group Cypher Functions
 * @category Math
 */
function exp(expr) {
    return new CypherFunctions_1.CypherFunction("exp", [expr]);
}
exports.exp = exp;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-log)
 * @group Cypher Functions
 * @category Math
 */
function log(expr) {
    return new CypherFunctions_1.CypherFunction("log", [expr]);
}
exports.log = log;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-log10)
 * @group Cypher Functions
 * @category Math
 */
function log10(expr) {
    return new CypherFunctions_1.CypherFunction("log10", [expr]);
}
exports.log10 = log10;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-sqrt)
 * @group Cypher Functions
 * @category Math
 */
function sqrt(expr) {
    return new CypherFunctions_1.CypherFunction("sqrt", [expr]);
}
exports.sqrt = sqrt;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-acos)
 * @group Cypher Functions
 * @category Math
 */
function acos(expr) {
    return new CypherFunctions_1.CypherFunction("acos", [expr]);
}
exports.acos = acos;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-asin)
 * @group Cypher Functions
 * @category Math
 */
function asin(expr) {
    return new CypherFunctions_1.CypherFunction("asin", [expr]);
}
exports.asin = asin;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-atan)
 * @group Cypher Functions
 * @category Math
 */
function atan(expr) {
    return new CypherFunctions_1.CypherFunction("atan", [expr]);
}
exports.atan = atan;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-atan2)
 * @group Cypher Functions
 * @category Math
 */
function atan2(expr) {
    return new CypherFunctions_1.CypherFunction("atan2", [expr]);
}
exports.atan2 = atan2;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-cos)
 * @group Cypher Functions
 * @category Math
 */
function cos(expr) {
    return new CypherFunctions_1.CypherFunction("cos", [expr]);
}
exports.cos = cos;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-cot)
 * @group Cypher Functions
 * @category Math
 */
function cot(expr) {
    return new CypherFunctions_1.CypherFunction("cot", [expr]);
}
exports.cot = cot;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-degrees)
 * @group Cypher Functions
 * @category Math
 */
function degrees(expr) {
    return new CypherFunctions_1.CypherFunction("degrees", [expr]);
}
exports.degrees = degrees;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-haversin)
 * @group Cypher Functions
 * @category Math
 */
function haversin(expr) {
    return new CypherFunctions_1.CypherFunction("haversin", [expr]);
}
exports.haversin = haversin;
/** 3.141592653589793
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-pi)
 * @see https://www.piday.org/
 * @group Cypher Functions
 * @category Math
 */
function pi() {
    return new CypherFunctions_1.CypherFunction("pi");
}
exports.pi = pi;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-radians)
 * @group Cypher Functions
 * @category Math
 */
function radians(expr) {
    return new CypherFunctions_1.CypherFunction("radians", [expr]);
}
exports.radians = radians;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-sin)
 * @group Cypher Functions
 * @category Math
 */
function sin(expr) {
    return new CypherFunctions_1.CypherFunction("sin", [expr]);
}
exports.sin = sin;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-tan)
 * @group Cypher Functions
 * @category Math
 */
function tan(expr) {
    return new CypherFunctions_1.CypherFunction("tan", [expr]);
}
exports.tan = tan;
